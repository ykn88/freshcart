// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String?
  email          String    @unique
  hashedPassword String?
  role           String    @default("user")
  contactNo      String?
  whatsapp       String?
  address        String?
  openingHrs     String?
  closingHrs     String?
  mostSell       String?
  sessions       Session[]
  cart           Cart[]
  orders         Order[]
  payments       Payment[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model Category {
  id        Int       @default(autoincrement()) @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String    
  product   Product[] 
}

model Product {
  id          Int        @default(autoincrement()) @id
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String     
  imageUrl    String     
  description String?    
  price       Float      
  stock       Boolean    
  minQuantity Float?     
  category    Category   @relation(fields: [catId], references:[id])
  catId       Int 
  cart        Cart
  orderDetail OrderDetail       
}

model Cart {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Float    
  product   Product  @relation(fields: [productId], references: [id])
  productId Int      
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      
}

model Order {
  id           Int           @default(autoincrement()) @id
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  phone        String        
  address      String        
  pinCode      String        
  user         User          @relation(fields: [userId], references: [id])
  userId       Int           
  orderDetails OrderDetail[] 
  payment      Payment
  status       Status        @default(PENDING)       
}

enum Status {
  PENDING
  DELIVERED
}

model OrderDetail {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Float    
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int    
}

model Payment {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  total     Float    
  mode      String   
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  status    PayStatus @default(PENDING)      
}

enum PayStatus{
  PENDING
  PAID
}


